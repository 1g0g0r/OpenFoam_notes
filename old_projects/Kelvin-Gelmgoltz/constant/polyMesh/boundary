/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
/*   Windows 32 and 64 bit porting by blueCAPE: http://www.bluecape.com.pt   *\
|  Based on Windows porting (2.0.x v4) by Symscape: http://www.symscape.com   |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       polyBoundaryMesh;
    location    "constant/polyMesh";
    object      boundary;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

7
(
    movingWall
    {
        type            wall;
        inGroups        List<word> 1(wall);
        nFaces          450;
        startFace       359150;
    }
    movingWall1
    {
        type            wall;
        inGroups        List<word> 1(wall);
        nFaces          450;
        startFace       359600;
    }
    right
    {
        type            cyclic;
        inGroups        List<word> 1(cyclic);
        nFaces          200;
        startFace       360050;
        matchTolerance  0.0001;
        neighbourPatch  left;
        transformType   translational;
        separation      (10 0 0);
    }
    left
    {
        type            cyclic;
        inGroups        List<word> 1(cyclic);
        nFaces          200;
        startFace       360250;
        matchTolerance  0.0001;
        neighbourPatch  right;
        transformType   translational;
        separation      (-10 0 0);
    }
    right1
    {
        type            cyclic;
        inGroups        List<word> 1(cyclic);
        nFaces          200;
        startFace       360450;
        matchTolerance  0.0001;
        neighbourPatch  left1;
        transformType   translational;
        separation      (10 0 0);
    }
    left1
    {
        type            cyclic;
        inGroups        List<word> 1(cyclic);
        nFaces          200;
        startFace       360650;
        matchTolerance  0.0001;
        neighbourPatch  right1;
        transformType   translational;
        separation      (-10 0 0);
    }
    frontAndBack
    {
        type            empty;
        inGroups        List<word> 1(empty);
        nFaces          360000;
        startFace       360850;
    }
)

// ************************************************************************* //
